library(datasets)
cat("/14")
cat("/14")
cat("\014")
library(datasets)
head(iris)
?iris
head(iris)
head(iris)
hist(iris$Sepal.Length)
print("use histogram to visualize the sepal width")
hist(iris$Petal.Width)
hist(iris$Sepal.Width)
hist(iris$Sepal.Width)
print("use histogram to visualize the petal length")
hist(iris$Petal.Width)
hist(iris$Petal.length)
print("use histogram to visualize the petal length")
hist(iris$Petal.length)
hist(iris$Petal.Length)
hist(iris$Petal.Length)
print("use histogram to visualize the petal length")
hist(iris$Petal.Length)
hist(iris$Petal.Width)
print("use histogram to visualize the petal width")
hist(iris$Petal.Width)
print(iris$Species)
print(unique(iris$Species))
setosa_width <- iris$Petal.Width [ iris$Species == "setosa"]
filter <- iris$Species == "setosa"
setosa_width <- iris$Petal.Width [ filter ]
hist(setosa_width)
hist(
setosa_width,
xlim = c(0,3),
main="Petal Width for Setosa",
xlab="",
col="red"
)
setosa_width <- iris$Petal.Width [ iris$Species == "setosa" ]
setosa_width <- iris$Petal.Width [ iris$Species == "setosa" ]
hist(
setosa_width,
xlim = c(0,3),
main="Petal Width for Setosa",
xlab="",
col="red"
)
hist(
iris$Petal.Width [ iris$Species == "setosa" ],
xlim = c(0,3),
main="Petal Width for Setosa",
xlab="",
col="red"
)
hist(
iris$Petal.Width [ iris$Species == "setosa" ],
xlim = c(0,3),
main="Petal Width for Setosa",
xlab="",
col="red"
)
hist(
iris$Petal.Width [ iris$Species == "setosa" ],
xlim = c(0,3),
breaks=9
main="Petal Width for Setosa",
hist(
iris$Petal.Width [ iris$Species == "setosa" ],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
hist(
iris$Petal.Width [iris$Species == "setosa"],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
only_setosa_species = iris$Species == "setosa"
petal_width_col = iris$Petal.Width
hist(
petal_width_col [only_setosa_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
only_versicolor_species = iris$Species == "versicolor"
hist(
petal_width_col [only_versicolor_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
hist(
petal_width_col [only_setosa_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
only_versicolor_species = iris$Species == "versicolor"
hist(
petal_width_col [only_versicolor_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
# Set up a layout with two rows and one column
par(mfrow = c(3, 1))
print("Create partition so that can have multiple chart")
# Set up a layout with two rows and one column
par(mfrow = c(3, 1))
print("use histogram to visualize the sepal lenth")
hist(iris$Sepal.Length)
print("use histogram to visualize the sepal width")
hist(iris$Sepal.Width)
print("use histogram to visualize the petal length")
hist(iris$Petal.Length)
print("use histogram to visualize the petal width")
hist(iris$Petal.Width)
print("for each species ... get the petal width histogram")
print("List all the species")
print(unique(iris$Species))
print("Get histogram for setosa species")
only_setosa_species = iris$Species == "setosa"
petal_width_col = iris$Petal.Width
hist(
petal_width_col [only_setosa_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
only_versicolor_species = iris$Species == "versicolor"
hist(
petal_width_col [only_versicolor_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
head(iris)
print("use histogram to visualize the sepal lenth")
hist(iris$Sepal.Length)
print("use histogram to visualize the sepal width")
hist(iris$Sepal.Width)
print("use histogram to visualize the petal length")
hist(iris$Petal.Length)
print("use histogram to visualize the petal width")
hist(iris$Petal.Width)
print("for each species ... get the petal width histogram")
print("List all the species")
print("Create partition so that can have multiple chart")
# Set up a layout with two rows and one column
par(mfrow = c(3, 1))
dev.capabilities()
dev.off()
print("Create partition so that can have multiple chart")
# Set up a layout with two rows and one column
par(mfrow = c(3, 1))
hist(
petal_width_col [only_setosa_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
only_versicolor_species = iris$Species == "versicolor"
hist(
petal_width_col [only_versicolor_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
only_verginica_species = iris$Species == "verginica"
hist(
petal_width_col [only_verginica_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
only_verginica_species = iris$Species == "verginica"
hist(
petal_width_col [only_verginica_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
hist(
petal_width_col [only_verginica_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
hist(
petal_width_col [only_versicolor_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
only_virginica_species = iris$Species == "virginica"
hist(
petal_width_col [only_virginica_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
dev.off()
hist(
petal_width_col [only_setosa_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
only_versicolor_species = iris$Species == "versicolor"
hist(
petal_width_col [only_versicolor_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
dev.off
dev.off()
print("Create partition so that can have multiple chart")
# Set up a layout with two rows and one column
par(mfrow = c(3, 1))
hist(
petal_width_col [only_setosa_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
only_versicolor_species = iris$Species == "versicolor"
hist(
petal_width_col [only_versicolor_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
only_virginica_species = iris$Species == "virginica"
hist(
petal_width_col [only_virginica_species],
xlim = c(0,3),
breaks=9,
main="Petal Width for Setosa",
xlab="",
col="red"
)
detatch(datasets)
rm(env_items)
rm(env_items)
rm(list=env_items)
env_items <- ls()
rm(list=env_items)
library(datasets)
dev.off()
cat("\014")
library(datasets)
?mtcars
head(mtcars)
mfcrow()
par(mrow= c(2,15))
par(mfrow= c(2,15))
par(mfrow= c(2,15))
hist(car_watt, main = "Car watt histogram")
# check the univariate distributions
car_watt <- mtcars$wt
car_miles <- mtcars$mpg
par(mfrow= c(2,15))
hist(car_watt, main = "Car watt histogram")
hist(car_watt)
hist(car_watt)
hist(car_watt)
par(mfrow= c(1,15))
par(mfrow= c(1,15))
hist(car_watt)
par(mfrow= c(1,1))
hist(car_watt)
par(mfrow= c(20,2))
hist(car_watt)
def.off()
par(mfrow= c(20,2))
hist(car_watt)
par(mfrow= c(10,2))
hist(car_watt)
par(mfrow= c(1,2))
hist(car_watt)
par(mfrow= c(10,2))
par(mfrow= c(10,2))
hist(car_watt)
par(mfrow= c(1,10))
hist(car_watt)
def.off()
par(mfrow= c(1,10))
hist(car_watt)
par(mfrow= c(10,1))
hist(car_watt)
def.off()
library(datasets)
?mtcars
head(mtcars)
# check the univariate distributions
car_watt <- mtcars$wt
car_miles <- mtcars$mpg
par(mfrow= c(10,1))
hist(car_watt)
def.off()
par(mfrow= c(2,1))
hist(car_watt)
def.off()
par(mfrow= c(2,1), mar = c(4, 4, 2, 1))
hist(car_watt)
def.off()
par(mfrow= c(5,1), mar = c(4, 4, 2, 1))
hist(car_watt)
par(mfrow= c(10,1), mar = c(4, 4, 2, 1))
hist(car_watt)
par(mfrow= c(2,1))
hist(car_watt)
hist(car_miles)
# if two quantitative together = scatterplot
plot(car_watt, car_miles)
library(datasets)
?mtcars
head(mtcars)
# check the univariate distributions
car_weight <- mtcars$wt
car_miles <- mtcars$mpg
par(mfrow= c(2,1))
hist(car_weight)
hist(car_miles)
# if two quantitative together = scatterplot
plot(car_weight, car_miles)
solid_circle = 19
size_of_point = 1.5
colour = "#cc000"
title= "MPG as a function of weight of cars"
xlabel = "Weight (1000 pounds)"
ylabel = "MPG"
plot(car_weight, car_miles, )
plot(
car_weight,
car_miles,
pch = solid_circle,
cex = size_of_point,
main = title,
xlab = xlabel,
ylab = ylabel
)
solid_circle = 19
size_of_point = 1.5
red = "#cc000"
title= "MPG as a function of weight of cars"
xlabel = "Weight (1000 pounds)"
ylabel = "MPG"
plot(
car_weight,
car_miles,
col= red,
pch = solid_circle,
cex = size_of_point,
main = title,
xlab = xlabel,
ylab = ylabel
)
plot(
car_weight,
car_miles,
pch = solid_circle,
cex = size_of_point,
col= red,
main = title,
xlab = xlabel,
ylab = ylabel
)
solid_circle = 19
size_of_point = 1.5
red = "#cc0000"
title= "MPG as a function of weight of cars"
xlabel = "Weight (1000 pounds)"
ylabel = "MPG"
plot(
car_weight,
car_miles,
pch = solid_circle,
cex = size_of_point,
col= red,
main = title,
xlab = xlabel,
ylab = ylabel
)
plot(
car_weight,
car_miles,
pch = solid_circle,
cex = size_of_point,
col= red,
main = title,
xlab = xlabel,
ylab = ylabel
)
ï¼Ÿplot
?plot
library(datasets)
?mtcars
head(mtcars)
# check the univariate distributions
car_weight <- mtcars$wt
car_miles <- mtcars$mpg
par(mfrow= c(2,1))
hist(car_weight)
hist(car_miles)
# if two quantitative together = scatterplot
plot(car_weight, car_miles)
solid_circle = 19
size_of_point = 1.5
red = "#cc0000"
title= "MPG as a function of weight of cars"
xlabel = "Weight (1000 pounds)"
ylabel = "MPG"
?plot
plot(
car_weight,
car_miles,
pch = solid_circle,
cex = size_of_point,
col= red,
main = title,
xlab = xlabel,
ylab = ylabel
)
dev.off()
env_items = ls()
rm(env_items)
rm(list=env_items)
dev.off()
env_items <- ls()
rm(list=env_items)
detatch(datasets)
dev.off()
env_items <- ls()
rm(list=env_items)
detath(datasets)
detach(datasets)
detach("package:datasets")
dev.off()
env_items <- ls()
detach("package:datasets")
detach("package:datasets", unload= TRUE)
detach("package:datasets", unload= TRUE)
detach("package:datasets", unload= TRUE)
detach("package:datasets", unload= TRUE)
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
detach("package:datasets", unload= TRUE)
library(datasets)
detach("package:datasets", unload= TRUE)
